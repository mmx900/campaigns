= render 'campaigns/petition_new/section_cover'

= render 'campaigns/petition_new/section_tab', menu: 'comment'

%section.section-panel
  = render 'campaigns/petition_new/section_right'

  %section.section-left.tab-content
    #comment.tab-pane.fade.in.active
      %section.section-comments
        .section-title
          의견
        = form_for Comment.new, html: { class: 'comment-form' } do |f|
          .commenter-image{ style: "background-image:url(#{asset_url(@campaign.user.image_url(:xs))});" }
          = f.hidden_field :commentable_type, value: "Campaign"
          = f.hidden_field :commentable_id, value: @campaign.id
          .comment-right
            %a{"class": "comment-box", "href": "#", "data-target" => "#agent-request-modal-comment", "data-toggle" => "modal" }
            = f.submit '등록', class: 'comment-submit-btn'
        .comment-filter
          = select_tag "CommentTarget", options_from_collection_for_select(@campaign.agents, :name, :name), class: 'filter-select-agent', include_blank: true, prompt: '촉구대상별 보기'
          .filters
            .filter-order-by
              .order-by-recent 최신순
              .order-by-like-count 공감순
            - if user_signed_in?
              .my-comment 내 글 보기
        .comments.infinite-container
          - @campaign.comments.recent.page(1).each do |comment|
            .comment.infinite-item
              - if comment.target_agents.any?
                = hidden_field_tag 'filter-agents', comment.target_agents.select(:name).map{ |x| x.name }.to_json
              = hidden_field_tag 'sort-date', comment.updated_at.to_i
              = hidden_field_tag 'sort-like', comment.merged_likes_count
              .comment-controls
                %a
                  삭제
                %a
                  신고
                %a
                  긴급신고
                %a
                  박제
              .comment-form
                .commenter-image{ style: "background-image:url(#{asset_url(comment.user_image)});" }
                .comment-right
                  .comment-header
                    .nickname
                      = comment.user_nickname
                      - if comment.target_agents.any?
                        .comment-agent
                          = comment.target_agents.shuffle.first.name
                          - if comment.target_agents.count > 1
                            외 #{comment.target_agents.count - 1}
                          에 촉구
                        - popoverblock = capture do
                          %ul.list-unstyled
                            - Statement.joins(:agent).where(statementable_type: 'Campaign', statementable_id: 79).where(agent: comment.target_agents).pluck(:'agents.name', :stance).map{ |x| [x[0], if x[1] == "unsure" then "안읽음" else "읽음" end] }.each do |x|
                              %li
                                %b #{x[0]}
                                #{x[1]}
                        = link_to '#', { "data-toggle" => "popover", "data-trigger" => "focus", "data-html" => true, "data-content" => "#{popoverblock}", "style" => "margin-left: 6px"} do
                          - if Statement.joins(:agent).where(statementable_type: 'Campaign', statementable_id: 79).where(agent: comment.target_agents).pluck(:'agents.name', :stance).select{ |x| x[1] != "unsure" }.count > 0
                            %i.fa.fa-envelope-open-o
                          - else
                            %i.fa.fa-envelope-o
                    %span.sign-info
                      / comment로 알 수 있는 건.... 촉구? 서명?
                      - if Order.where(comment: comment).present?
                        #{Order.where(comment: @campaign.comments).where("comment_id <= ?", comment.id).select(:comment_id).distinct.count}번째 서명자
                      .date= date_f comment.updated_at
                  .comment-body
                    = raw comment.body
                  .comment-footer
                    = render 'likes/button', likable: comment
        - unless @campaign.comments.page(1).last_page?
          = link_to '', comments_path(commentable_id: @campaign.id, commentable_type: 'Campaign', page: 2, test: 'signs'), class: "infinite-more-link"

= render 'campaigns/petition_new/sign_button'
