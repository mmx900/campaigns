%section
  - if local_assigns[:position].present?
    %h4= position
  .opinion-speakers-list
    .row
      - Opinion.available_stance_values_by_theme(issue.agenda_theme).each do |stance|
        - if stance == 'unsure'
          - if agenda_theme.try(:slug) == 'votefuture'
            - opinions = issue.opinions.any_of(Opinion.where(stance: nil), Opinion.where(stance: 'unsure'), Opinion.where(stance: 'disagree'))
          - else
            - opinions = issue.opinions.any_of(Opinion.where(stance: nil), Opinion.where(stance: 'unsure'))
        - else
          - opinions = issue.opinions.where(stance: stance)
        - stance_speakers = Speaker.where(id: opinions.pluck(:speaker_id)).distinct
        - available_stances = Opinion.available_stance_values_by_theme(issue.agenda_theme)
        %div{ class: "#{('hidden-xs' if stance_speakers.empty?)} #{(issue.agenda_theme.try(:slug) == 'votefuture' ? "col-sm-4" : "col-sm-3")}" }
          .position
            = Opinion.stance_text_by_theme(issue.agenda_theme, stance)
            %span{ style: 'font-weight: normal' } #{stance_speakers.count}ëª…

          .answer-speakers
            .ui.list.grid
          = render 'issues/speakers', speakers: stance_speakers, issue: issue, quote: stance, max_count: 15, link_to_opinon: true
