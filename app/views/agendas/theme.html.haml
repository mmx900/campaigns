= render 'agendas/theme_header', theme_tag: params[:theme_tag]

- speaker_positions = speaker_positions_of_theme(params[:theme_tag])
- speakers = Speaker.of_position(speaker_positions)
%section.page-block{ style: 'background-color: #eee' }
  .container
    - speakers_and_votes_count = speakers.map{|s| { speaker: s, votes_count: s.opinions.of_theme(params[:theme_tag]).sum(:votes_count) }}.sort_by{|h| h[:votes_count]}.reverse
    - max_votes = speakers_and_votes_count[0][:votes_count]
    - speakers_and_votes_count.each do |s|
      - speaker = s[:speaker]
      - votes_count = s[:votes_count]
      - opinions = speaker.opinions.of_theme(params[:theme_tag])
      - agrees_count = opinions.sum(:agrees_count)
      - disagrees_count = opinions.sum(:disagrees_count)
      %div
        %h4
          = link_to speaker.name, speaker
          .text-muted.pull-right
            총투표 #{votes_count}건
        .progress
          .progress-bar.progress-bar-striped.progress-bar-success{ style: "width:#{agrees_count/max_votes.to_f*100}%" }
            #{agrees_count}건
          .progress-bar.progress-bar-striped.progress-bar-danger{ style: "width:#{disagrees_count/max_votes.to_f*100}%" }
            #{disagrees_count}건

%section.page-block
  .container
    .page-header
      %h2
        주요 의제
        %span.text-danger #{@agendas.count}
        개
    .nav-tabs{ style: 'border:0' }
      - @agendas.each_with_index do |agenda, i|
        %div{ style: 'padding:0 10px 10px 0; display: inline-block;' }
          %a{ href: "#agenda_#{i}", role: "tab", data: { toggle: "tab" }}
            .card{ style: 'margin-bottom:0' }
              .card-image{ style: "position: relative; width: 100px; height: 100px; background-image: linear-gradient(rgba(0,0,0,0),rgba(0,0,0,.5)), url(#{agenda.image.sm.url}); background-size: cover; background-position: center center; text-align:center; color: white;" }
                %h5{ style: 'position:absolute; left:0; right:0; bottom:0; '}= agenda.name

%section.page-block
  .container
    .tab-content{ style: 'border:0; padding:0' }
      - @agendas.each_with_index do |agenda, i|
        .tab-pane{ id: "agenda_#{i}", class: ('active' if i == 0) }
          %h2= agenda.name
          - agenda.issues.with_theme(params[:theme_tag]).each do |issue|
            %section{ style: 'margin-bottom: 3em;' }
              %h3[issue]
                = issue.title

                - if user_signed_in? and current_user.is_admin?
                  .pull-right.hidden-sm.hidden-xs
                    = form_tag new_or_edit_admin_opinions_path, method: :get, class: 'form-inline', target: '_blank' do
                      .inline.field
                        = hidden_field_tag :issue_id, issue.id
                        %select{name: :speaker_id, class: 'form-control'}
                          - speakers.each do |speaker|
                            %option{ value: speaker.id }
                              = speaker.name
                        %button.btn.btn-default{ type: "submit" } 입력

              - if issue.body.present?
                .issue-body
                  %p!= simple_format(h(issue.body))

              - if issue.has_stance?
                - speaker_positions.each do |position|
                  - speakers_of_position = speakers.of_position(position)
                  - if issue.has_any_stances?(speakers_of_position)
                    = render 'opinions/stances', position: (position if speaker_positions.count > 1), speakers: speakers_of_position, issue: issue, theme_tag: params[:theme_tag]

              - if issue.opinions.where(speaker: speakers).any?(&:has_content?)
                .panel.panel-default
                  .list-group
                    - speakers.shuffle.each do |speaker|
                      - issue.opinions.of_speaker(speaker).each do |opinion|
                        - next unless opinion.has_content?
                        = render 'opinions/line_item', opinion: opinion, theme_tag: params[:theme_tag]
