.card
  .card-header
    촉구대상 검색하여 추가
  .card-body
    %p 촉구할 대상을 찾아 보세요.
    = form_tag [:add_agents, statementable] do
      = select_tag :action_targets, nil, multiple: true, class: 'form-control gov-action-targets-select w-100', style: 'display: inline;'
      = submit_tag '추가', class: 'btn btn-primary mt-2'

    %hr

    %p 혹은 촉구할 조직을 선택하세요. 관련된 사람이 모두 선택됩니다.

    = form_tag [:add_agents, statementable] do
      = select_tag :"action_targets[]", options_from_collection_for_select(Agency.order(id: :desc), lambda { |agency| "agency:#{agency.id}" }, lambda { |agency| "#{agency.title} (#{agency.agents.count}명) - 최종 업데이트 #{l agency.updated_at.to_date}" }), class: 'form-control w-100', style: 'display: inline;'
      = submit_tag '추가', class: 'btn btn-primary mt-2'

.card.mt-4
  .card-header
    현재 촉구대상

  - if statementable.agents.empty?
    .card-body
      아직 촉구 중인 대상이 없습니다.
  - if statementable.dedicated_agents.any?
    .card-body
      %h4 직접 연결된 인물
      .row
        - statementable.dedicated_agents.each do |agent|
          - statement = statementable.cached_statement_of(agent)
          .col-12.col-sm-4
            .card.text-white.m-1.bg-dark
              .row.no-gutters
                .col-6
                  = link_to agent_path(agent) do
                    = image_tag agent.image.md.url, class: "card-img", style: "height: 6.5rem; object-fit: cover"
                .col-6
                  .card-body.p-2.d-flex.flex-column.h-100.justify-content-between
                    %h6.mb-1.card-title.flex-grow-1.flex-shrink-1
                      = link_to agent_path(agent), class: 'text-white' do
                        %strong= agent.name
                        %small= agent.organization
                    .card-text
                      %small
                        - if statement.try(:stancable?)
                          - if statement.try(:sure?)
                            %strong= statement.try(:stance).try(:text)
                          - else
                            - if statement.try(:body).present?
                              %span 응답
                            - else
                              %span 무응답
                        - else
                          - if statement.try(:body).present?
                            %span 응답
                          - else
                            %span 무응답
                        - if statement.try(:body).present?
                          %i.fa.fa-comment-dots.js-popover{ "data-placement": "top", "data-trigger": "hover", "data-content": statement.body }
                    .card-text
                      = link_to '답변 관리', polymorphic_path([:edit_statements, statementable], agent_id: agent.id), target: '_blank', class: 'btn btn-success btn-sm text-nowrap'
                      = link_to '연결끊기', polymorphic_path([:remove_agent, statementable], agent_id: agent.id, q: params[:q]), method: :delete, class: 'btn btn-danger btn-sm text-nowrap'

  - if statementable.action_targets.any?
    - statementable.action_targets.to_a.group_by(&:action_assignable_type).each do |action_assignable_type, action_targets|
      .card-body
        %h4 연결된 #{action_assignable_type.classify.safe_constantize.model_name.human}
        - action_targets.each do |action_target|
          - action_assignable = action_target.action_assignable
          .media.align-items-center
            = link_to action_assignable do
              = image_tag action_assignable.image.md.url, class: "card-img mr-2", style: "border-radius: 99999px; height: 2rem; width: 2rem; object-fit: cover"
            .media-body
              %h6.d-inline-block
                = link_to action_assignable, class: 'text-dark' do
                  %strong= action_assignable.title
              = link_to '연결끊기', polymorphic_path([:remove_action_target, statementable], action_assignable_id: action_assignable.id, action_assignable_type: action_assignable.class.to_s, q: params[:q]), method: :delete, class: 'btn btn-danger btn-sm text-nowrap'
          .row
            - action_assignable.agents.each do |agent|
              - statement = statementable.cached_statement_of(agent)
              .col-12.col-sm-4
                .card.text-white.m-1.bg-dark
                  .row.no-gutters
                    .col-6
                      = link_to agent_path(agent) do
                        = image_tag agent.image.md.url, class: "card-img", style: "height: 6.5rem; object-fit: cover"
                    .col-6
                      .card-body.p-2.d-flex.flex-column.h-100.justify-content-between
                        %h6.mb-1.card-title.flex-grow-1.flex-shrink-1
                          = link_to agent_path(agent), class: 'text-white' do
                            %strong= agent.name
                            %small= agent.organization
                        .card-text
                          %small
                            - if statement.try(:stancable?)
                              - if statement.try(:sure?)
                                %strong= statement.try(:stance).try(:text)
                              - else
                                - if statement.try(:body).present?
                                  %span 응답
                                - else
                                  %span 무응답
                            - else
                              - if statement.try(:body).present?
                                %span 응답
                              - else
                                %span 무응답
                            - if statement.try(:body).present?
                              %i.fa.fa-comment-dots.js-popover{ "data-placement": "top", "data-trigger": "hover", "data-content": statement.body }
                        .card-text
                          = link_to '답변 관리', polymorphic_path([:edit_statements, statementable], agent_id: agent.id), target: '_blank', class: 'btn btn-success btn-sm text-nowrap'
