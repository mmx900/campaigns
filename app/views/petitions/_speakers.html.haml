.panel-body
  .panel-post__speakers
    %h4= t("views.petition.speaker_section_title.id_#{@petition.id}", default: I18n.t("views.petition.speaker_section_title.default"))

    .row.masonry-container
      - @petition.speakers.each do |speaker|
        .col-md-3.col-sm-4.col-xs-6
          .card
            = link_to speaker do
              .card-image{ style: "height: 140px; background-image: url(#{speaker.image.md.url}); background-size: cover; background-position: center -30px;" }
                - statement = @petition.statements.speaker_by(speaker)
                - if statement.try(:is_responed?) and
                  - if statement.stance.try(:agree?)
                    - ribbon_class = 'label-success'
                  - elsif statement.stance.try(:hold?)
                    - ribbon_class = 'label-warning'
                  - elsif statement.stance.try(:disagree?)
                    - ribbon_class = 'label-danger'
                  - elsif statement.stance.blank?
                    - ribbon_class = 'label-default'
                  %span.label.label-ribbon-left{ class: ribbon_class}
                    - if statement.stance.present?
                      = statement.stance.text
                    - else
                      응답
            .card-content
              = link_to speaker.name, speaker, class: 'card-header'
              .card-meta= speaker.organization
            .card-content.card-extra
              = link_to new_comment_speaker_petition_path(@petition, speaker_id: speaker.id) do
                - count = @petition.comments.with_target_speaker(speaker).count
                촉구하기#{"(#{count})" if count > 0}
              - if speaker.twitter.present?
                .pull-right
                  - tweeter_msg = "'#{@petition.title}'에 대한 의견을 밝혀 주십시오. #{petition_url(@petition)}"
                  = link_to "https://twitter.com/intent/tweet?text=@#{speaker.twitter} #{tweeter_msg}", target:'_blank' do
                    멘션보내기

- if @petition.statements.responed_body.any?
  .panel-body
    .panel-post__statements
      - @petition.statements.responed_body.recent.each do |statement|
        - speaker = statement.speaker
        .panel.panel-opinion.panel-default[statement]
          .panel-body{ style: 'padding: 14px' }
            .media[statement]
              .media-left
                = link_to speaker_path(speaker) do
                  .media-object.image.speaker-image{style: "background-image: url(#{speaker.image.xs.url});"}

              .media-body
                - if statement.stance.present?
                  %h4.media-heading
                    = statement.stance.text
                %p
                  = link_to speaker_path(speaker) do
                    = speaker.name
                    %span.text-muted= speaker.organization
                - if statement.body.present?
                  .opinion__body
                    != statement.body

