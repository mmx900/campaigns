- if @petition.project
  = render 'projects/header', project: @petition.project

- commentable = @petition
%section.page-block
  .container
    .page-header
      %h2
        %span.image.speaker-image.speaker-image--mini{style: "background-image: url(#{@speaker.image.xs.url}); display: inline-block; width: 1em; height: 1em;"}
        #{@speaker.name}님에게 촉구하기
    .comments-form
      = form_for Comment.new, html: { class: 'gov-action-form-validation' } do |f|
        = hidden_field_tag :back_commentable, '1'
        = f.hidden_field :commentable_type, value: commentable.class.name
        = f.hidden_field :commentable_id, value: commentable.id
        = f.hidden_field :target_speaker_id, value: @speaker.id
        - unless user_signed_in?
          .row
            .col-xs-12.col-md-6
              .form-group
                = f.label :commenter_name
                = f.text_field :commenter_name, class: 'form-control', data: { 'rule-required': true }
            .col-xs-12.col-md-6
              .form-group
                = f.label :commenter_email, @speaker.email.present? ? "이메일(#{@speaker.name}님에게 메일을 발송하려면 반드시 넣어주세요)" : nil
                = f.text_field :commenter_email, class: 'form-control'
        - if @speaker.email.present?
          .form-group
            .checkbox
              %label
                = f.check_box :mailing, { checked: true }, 'ready', 'disable'
                #{@speaker.name}님에게 메일로도 발송합니다.
        .form-group
          ~ f.text_area :body, placeholder: '제 생각에는...', class: 'form-control validate ' + ( is_redactorable? ? 'redactor' : ''), data: { 'rule-required': true }
        - unless user_signed_in?
          .form-group.recaptcha
            .help-block 스팸 방지를 위해 사람인지 확인합니다. 아래 체크 박스를 클릭해 주세요.
            = hidden_field_tag :hiddenRecaptcha, nil, class: 'validate'
            .gov-action-recaptcha
        = f.submit '작성', class: 'btn btn-default btn-sm'

