- cover_image = @petition.cover_image_url(:lg)
- comments = params[:tag] ? @petition.comments.tagged_with(params[:tag]) : @petition.comments
- google_map_apikey = 'AIzaSyBmxQGhxC-UzPzxIMlE9Sy09Dv9zUtiiW4'

%section.cover-section{ style: "background-image: linear-gradient(rgba(0, 0, 0, .1), rgba(0, 0, 0, .1)), url(#{cover_image})" }
  .container
    - if @project
      .cover-section__project
        = link_to @project.title, @project

    %h1.cover-section__title= @petition.title

    .cover-section__body= raw @petition.body

    .share-box{ 'data-share-image': image_url('seo.png') }

%section.page-block
  .container
    .infogram-embed{"data-id" => "0b77d1e9-08b7-4dd1-9ca7-758ef08f0345", "data-title" => "박근혜 탄핵시계_열려라국회", "data-type" => "interactive"}
    :javascript
      !function(e,t,n,s){var i="InfogramEmbeds",o=e.getElementsByTagName(t),d=o[0],a=/^http:/.test(e.location)?"http:":"https:";if(/^\/{2}/.test(s)&&(s=a+s),window[i]&&window[i].initialized)window[i].process&&window[i].process();else if(!e.getElementById(n)){var r=e.createElement(t);r.async=1,r.id=n,r.src=s,d.parentNode.insertBefore(r,d)}}(document,"script","infogram-async","//e.infogr.am/js/dist/embed-loader-min.js");

%section.page-block
  .container
    #map{ style: 'height: 600px;' }
    %script{:src => "https://maps.googleapis.com/maps/api/js?key=#{google_map_apikey}"}

%section.page-block
  .container
    - @petition.comments.tag_counts_on(:tags).each do |tag|
      - if params[:tag] == tag.name
        %span{ style: 'display: inline-block; background-color: #4a5dd0; padding: 7px 14px; border: 1px solid #4a5dd0; border-radius: 28px; color: #fff; margin-bottom: 7px;' }
          = link_to tag.name, petition_path(@petition), style: 'color: #fff'
          %small
            = tag.count
      - else
        %span{ style: 'display: inline-block; padding: 7px 14px; border: 1px solid #4a5dd0; border-radius: 28px; margin-bottom: 7px;' }
          = link_to tag.name, petition_path(@petition, {tag: tag.name})
          %small.text-muted
            = tag.count

- form_block = capture do
  = form_for Comment.new, html: { class: 'gov-action-form-validation', onsubmit: "$(this).find('#comment_tag_list').val( $(this).find('#comment_full_street_address option:selected').text() );" } do |f|
    = f.hidden_field :commentable_type, value: 'Petition'
    = f.hidden_field :commentable_id, value: @petition.id
    = f.hidden_field :tag_list
    = invisible_captcha
    - unless user_signed_in?
      .form-group
        = f.label :commenter_name
        = f.text_field :commenter_name, class: 'form-control', data: { 'rule-required': true }
      .form-group.hidden
        = f.label :commenter_email
        = f.text_field :commenter_email, class: 'form-control'
    .form-group
      = f.label :full_street_address, '주소(필수)'
      = f.select :full_street_address, options_for_select( Petition::CONGRESSMEN.collect{|c| [ "#{c[0]} (#{c[1]} #{c[2]})", c[3]]} ), {}, class: 'form-control'
    .form-group
      = f.label :image
      = f.file_field :image, class: 'form-control'
    .form-group
      ~ f.text_area :body, placeholder: '지금 나는...', required: true, rows: 3, class: 'form-control', data: { 'rule-required': true }
    = f.submit '작성', class: 'btn btn-primary btn-block'
%section.page-block
  .container
    - if @petition.opened?
      .row
        .col-sm-12.hidden-xs
          .panel.panel-default.panel-floating
            .panel-body
              = form_block
    .row.masonry-container
      - comments.order('id DESC').each do |comment|
        .col-sm-4
          .panel.panel-default.panel-floating[comment]{ style: 'padding:0' }
            .panel-body
              %h4= comment.tag_list
              - if comment.image.present?
                .comment__image
                  - if comment.latitude && comment.longitude
                    %a{ "data-target" => "#comment-modal", "data-toggle" => "modal", "data-comment-id" => comment.id, :type => "button", style: 'cursor:pointer' }
                      = image_tag comment.image_url(:lg), style: 'width: 100%;'
                  - else
                    = image_tag comment.image_url(:lg), style: 'width: 100%;'
              .comment__body
                %h4{ style: 'font-size: 16px; letter-spacing: -0.02em; line-height: 1.4;'}= smart_format comment.body
              .comment__meta{ style: 'color: #5f5f5f;font-size: 12px' }
                - if comment.latitude && comment.longitude
                  %i.fa.fa-map-marker.text-danger
                = comment.user_nickname
                = date_f comment.created_at
                - if can? :destroy, comment
                  = link_to '삭제', comment, method: :delete, data: { confirm: '정말 삭제하시겠습니까?' }
                - if current_user != comment.user
                  = render 'reports/button', reportable: comment
              .comment__map.hidden
                - if comment.latitude && comment.longitude
                  = image_tag "https://maps.googleapis.com/maps/api/staticmap?center=#{comment.latitude},#{comment.longitude}&size=400x300&zoom=18&markers=color:red%7C#{comment.latitude},#{comment.longitude}&key=#{google_map_apikey}", style: 'max-width: 100%;'
              .hidden.comment__like{ style: 'margin-top: 14px;' }
                = render 'likes/button', likable: comment

#comment-modal.modal.fade{:role => "dialog", :tabindex => "0"}
  .modal-dialog{:role => "document"}
    .modal-content
      .modal-header
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} &#215;
        %h4.modal-title
      .modal-body
        .comment__map.text-center

= content_for :script do
  :javascript
    $('#comment-modal').on('show.bs.modal', function (event) {
      var button = $(event.relatedTarget);
      var id = button.data('comment-id');
      var $comment = $('#comment_'+id);
      var map = $comment.find('.comment__map');
      var body = $comment.find('.comment__body');

      var modal = $(this);
      modal.find('.modal-title').text(body.text());
      modal.find('.modal-body .comment__map').html(map.html());
    })


    var locations = #{comments.select{|c| c.latitude.present? }.collect{ |c| ['<div><b>' + c.tag_list.join(',') + '</b></div>' + (c.image.present? ? '<div style="max-height: 150px; overflow: hidden;">' + image_tag(c.image_url(:sm), style: 'width: 100%;') + '</div>' : '') + '<div>' + c.body + '</div>' + '<div><span style="color: #5f5f5f; font-size: 12px">' + (c.user.present? ? c.user.nickname : c.commenter_name) + date_f(c.created_at) + '</span></div>', c.latitude, c.longitude] }}

    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 7,
      maxZoom : 11,
      minZoom : 7,
      center: new google.maps.LatLng(35.95, 128.25),
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    var bounds = new google.maps.LatLngBounds();
    var infowindow = new google.maps.InfoWindow({maxWidth: 300});

    var marker, i;
    var markers = [];

    var infowindowInterval;

    for (i = 0; i < locations.length; i++) {
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
        map: map
      });

      bounds.extend(marker.position);

      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          if(infowindowInterval) {
            clearInterval(infowindowInterval);
            infowindowInterval = null;
          }
          infowindow.setContent(locations[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));

      markers.push(marker);
    }

    if(locations.length) {
      map.fitBounds(bounds);
    }

    var showRandomInfowindow = function () {
      var index = Math.floor(Math.random() * locations.length);
      infowindow.setContent(locations[index][0]);
      infowindow.open(map, markers[index]);
    }
    showRandomInfowindow();
    infowindowInterval = setInterval(showRandomInfowindow, 10000);

- if @petition.opened?
  %section.visible-xs
    .container
      %nav.navbar.navbar-default.navbar-fixed-bottom{ style: 'min-height: auto;'}
        %button.btn.btn-primary.btn-lg.btn-block{"data-target" => "#comment-form-modal", "data-toggle" => "modal", :type => "button"}
          %i.fa.fa-file-image-o
          사진 올리기

  #comment-form-modal.modal.fade{:role => "dialog", :tabindex => "-1"}
    .modal-dialog{:role => "document"}
      .modal-content
        .modal-header
          %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
            %span{"aria-hidden" => "true"} &#215;
          %h4.modal-title 사진과 설명을 남겨주세요
        .modal-body
          = form_block
